{
  "address": "0x33a0a44B101F1fF940583b3AbE7971D9cfC07B1E",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "_burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "_mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xed59d4749354d4bd1277de890517823c55b7797ac2c0c61c3e7355715cdd3406",
  "receipt": {
    "to": null,
    "from": "0xffd3452eFa0eda06F8F1F7e2442C3E075905AE3e",
    "contractAddress": "0x33a0a44B101F1fF940583b3AbE7971D9cfC07B1E",
    "transactionIndex": 19,
    "gasUsed": "918765",
    "logsBloom": "0x
    "blockHash": "0x0d2044cbb070954deaaa8f53f26c6c1d5319eeaf5251b1a2d748d68c9483d306",
    "transactionHash": "0xed59d4749354d4bd1277de890517823c55b7797ac2c0c61c3e7355715cdd3406",
    "logs": [
      {
        "transactionIndex": 19,
        "blockNumber": 28820369,
        "transactionHash": "0xed59d4749354d4bd1277de890517823c55b7797ac2c0c61c3e7355715cdd3406",
        "address": "0x33a0a44B101F1fF940583b3AbE7971D9cfC07B1E",
        "topics": [
          "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6",
          "0x000000000000000000000000ffd3452efa0eda06f8f1f7e2442c3e075905ae3e"
        ],
        "data": "0x",
        "logIndex": 158,
        "blockHash": "0x0d2044cbb070954deaaa8f53f26c6c1d5319eeaf5251b1a2d748d68c9483d306"
      },
      {
        "transactionIndex": 19,
        "blockNumber": 28820369,
        "transactionHash": "0xed59d4749354d4bd1277de890517823c55b7797ac2c0c61c3e7355715cdd3406",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000ffd3452efa0eda06f8f1f7e2442c3e075905ae3e",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000004e56af82f8300000000000000000000000000000000000000000000000000029a0aa454565e4c0000000000000000000000000000000000000000000017151f2513b99ddbe26f000000000000000000000000000000000000000000000000029525395c26db4c0000000000000000000000000000000000000000000017151f29f924960b656f",
        "logIndex": 159,
        "blockHash": "0x0d2044cbb070954deaaa8f53f26c6c1d5319eeaf5251b1a2d748d68c9483d306"
      }
    ],
    "blockNumber": 28820369,
    "cumulativeGasUsed": "8851189",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "f718071e80118c79e0357d251ec2815d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"_burn(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. Emits a {Transfer} event with `to` set to the zero address. Requirements: - `account` cannot be the zero address. - `account` must have at least `amount` tokens.\"},\"_mint(address,uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `account`, increasing the total supply. Emits a {Transfer} event with `from` set to the zero address. Requirements: - `to` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The defaut value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/REP_Points.sol\":\"RepPoints\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/MinterRole.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./Roles.sol\\\";\\r\\n\\r\\ncontract MinterRole {\\r\\n    using Roles for Roles.Role;\\r\\n\\r\\n    event MinterAdded(address indexed account);\\r\\n    event MinterRemoved(address indexed account);\\r\\n\\r\\n    Roles.Role private minters;\\r\\n\\r\\n    constructor() {\\r\\n        _addMinter(msg.sender);\\r\\n    }\\r\\n\\r\\n    modifier onlyMinter(address sender) {\\r\\n        require(isMinter(sender));\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function isMinter(address account) public view returns (bool) {\\r\\n        return minters.has(account);\\r\\n    }\\r\\n\\r\\n    function addMinter(address account) public onlyMinter(msg.sender) {\\r\\n        _addMinter(account);\\r\\n    }\\r\\n\\r\\n    function renounceMinter() public {\\r\\n        _removeMinter(msg.sender);\\r\\n    }\\r\\n\\r\\n    function _addMinter(address account) internal {\\r\\n        minters.add(account);\\r\\n        emit MinterAdded(account);\\r\\n    }\\r\\n\\r\\n    function _removeMinter(address account) internal {\\r\\n        minters.remove(account);\\r\\n        emit MinterRemoved(account);\\r\\n    }\\r\\n}\",\"keccak256\":\"0x0b3c38a44cfdcd04936691556c9e6eab53a2ff63374dccda36caf160d52b6b73\",\"license\":\"GPL-3.0-or-later\"},\"contracts/REP_Points.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\r\\nimport \\\"contracts/MinterRole.sol\\\";\\r\\n\\r\\n// import \\\"hardhat/console.sol\\\";\\r\\n\\r\\ncontract RepPoints is Context, MinterRole {\\r\\n    mapping(address => uint256) private _balances;\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) private _allowances;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n\\r\\n    string private _name;\\r\\n    string private _symbol;\\r\\n\\r\\n    /**\\r\\n     * @dev Sets the values for {name} and {symbol}.\\r\\n     *\\r\\n     * The defaut value of {decimals} is 18. To select a different value for\\r\\n     * {decimals} you should overload it.\\r\\n     *\\r\\n     * All two of these values are immutable: they can only be set once during\\r\\n     * construction.\\r\\n     */\\r\\n    constructor() {\\r\\n        _name = \\\"REP_Points\\\";\\r\\n        _symbol = \\\"REP\\\";\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the name of the token.\\r\\n     */\\r\\n    function name() public view virtual returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\r\\n     * name.\\r\\n     */\\r\\n    function symbol() public view virtual returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of decimals used to get its user representation.\\r\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\r\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\r\\n     *\\r\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\r\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\r\\n     * overridden;\\r\\n     *\\r\\n     * NOTE: This information is only used for _display_ purposes: it in\\r\\n     * no way affects any of the arithmetic of the contract, including\\r\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\r\\n     */\\r\\n    function decimals() public view virtual returns (uint8) {\\r\\n        return 18;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-totalSupply}.\\r\\n     */\\r\\n    function totalSupply() public view virtual returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-balanceOf}.\\r\\n     */\\r\\n    function balanceOf(address account) public view virtual returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\r\\n     * the total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `from` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `to` cannot be the zero address.\\r\\n     */\\r\\n    function _mint(address account, uint256 amount)\\r\\n        external\\r\\n        onlyMinter(_msgSender())\\r\\n    {\\r\\n        require(account != address(0), \\\"Mint to the zero address\\\");\\r\\n\\r\\n        _totalSupply += amount;\\r\\n        _balances[account] += amount;\\r\\n        emit Transfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\r\\n     * total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `to` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `account` cannot be the zero address.\\r\\n     * - `account` must have at least `amount` tokens.\\r\\n     */\\r\\n    function _burn(address account, uint256 amount)\\r\\n        external\\r\\n        onlyMinter(_msgSender())\\r\\n    {\\r\\n        require(account != address(0), \\\"Burn from the zero address\\\");\\r\\n\\r\\n        uint256 accountBalance = _balances[account];\\r\\n        require(accountBalance >= amount, \\\"Burn amount exceeds balance\\\");\\r\\n        _balances[account] = accountBalance - amount;\\r\\n        _totalSupply -= amount;\\r\\n\\r\\n        emit Transfer(account, address(0), amount);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xc80dbae08992eea024e20ac0ed56d5f651edd7270939103b0fe739a65eca1fc9\",\"license\":\"MIT\"},\"contracts/Roles.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @title Roles\\r\\n * @dev Library for managing addresses assigned to a Role.\\r\\n */\\r\\nlibrary Roles {\\r\\n  struct Role {\\r\\n    mapping (address => bool) bearer;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev give an account access to this role\\r\\n   */\\r\\n  function add(Role storage role, address account) internal {\\r\\n    require(account != address(0));\\r\\n    role.bearer[account] = true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev remove an account's access to this role\\r\\n   */\\r\\n  function remove(Role storage role, address account) internal {\\r\\n    require(account != address(0));\\r\\n    role.bearer[account] = false;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev check if an account has this role\\r\\n   * @return bool\\r\\n   */\\r\\n  function has(Role storage role, address account)\\r\\n    internal\\r\\n    view\\r\\n    returns (bool)\\r\\n  {\\r\\n    require(account != address(0));\\r\\n    return role.bearer[account];\\r\\n  }\\r\\n}\",\"keccak256\":\"0xacb14328e74061aaf20c9187f36b6878b3193680206cc94f73c2fd424e8b5a76\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506200002333620000c560201b60201c565b6040518060400160405280600a81526020017f5245505f506f696e7473000000000000000000000000000000000000000000008152506004908051906020019062000070929190620001bf565b506040518060400160405280600381526020017f524550000000000000000000000000000000000000000000000000000000000081525060059080519060200190620000be929190620001bf565b50620002d4565b620000e08160006200012660201b620006ea1790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200016157600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b828054620001cd906200026f565b90600052602060002090601f016020900481019282620001f157600085556200023d565b82601f106200020c57805160ff19168380011785556200023d565b828001600101855582156200023d579182015b828111156200023c5782518255916020019190600101906200021f565b5b5090506200024c919062000250565b5090565b5b808211156200026b57600081600090555060010162000251565b5090565b600060028204905060018216806200028857607f821691505b602082108114156200029f576200029e620002a5565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b610e4780620002e46000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806370a082311161006657806370a082311461013557806395d89b4114610165578063983b2d5614610183578063986502751461019f578063aa271e1a146101a95761009e565b806306fdde03146100a357806318160ddd146100c1578063313ce567146100df5780634e6ec247146100fd5780636161eb1814610119575b600080fd5b6100ab6101d9565b6040516100b89190610ae1565b60405180910390f35b6100c961026b565b6040516100d69190610b63565b60405180910390f35b6100e7610275565b6040516100f49190610b7e565b60405180910390f35b610117600480360381019061011291906109bb565b61027e565b005b610133600480360381019061012e91906109bb565b6103e2565b005b61014f600480360381019061014a9190610992565b6105c7565b60405161015c9190610b63565b60405180910390f35b61016d610610565b60405161017a9190610ae1565b60405180910390f35b61019d60048036038101906101989190610992565b6106a2565b005b6101a76106c2565b005b6101c360048036038101906101be9190610992565b6106cd565b6040516101d09190610ac6565b60405180910390f35b6060600480546101e890610cc7565b80601f016020809104026020016040519081016040528092919081815260200182805461021490610cc7565b80156102615780601f1061023657610100808354040283529160200191610261565b820191906000526020600020905b81548152906001019060200180831161024457829003601f168201915b5050505050905090565b6000600354905090565b60006012905090565b610286610782565b61028f816106cd565b61029857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ff90610b43565b60405180910390fd5b816003600082825461031a9190610bb5565b9250508190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103709190610bb5565b925050819055508273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516103d59190610b63565b60405180910390a3505050565b6103ea610782565b6103f3816106cd565b6103fc57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561046c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046390610b03565b60405180910390fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ea90610b23565b60405180910390fd5b82816104ff9190610c0b565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600360008282546105549190610c0b565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516105b99190610b63565b60405180910390a350505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606005805461061f90610cc7565b80601f016020809104026020016040519081016040528092919081815260200182805461064b90610cc7565b80156106985780601f1061066d57610100808354040283529160200191610698565b820191906000526020600020905b81548152906001019060200180831161067b57829003601f168201915b5050505050905090565b336106ac816106cd565b6106b557600080fd5b6106be8261078a565b5050565b6106cb336107e4565b565b60006106e382600061083e90919063ffffffff16565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561072457600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600033905090565b61079e8160006106ea90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6107f88160006108d090919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561087957600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561090a57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008135905061097781610de3565b92915050565b60008135905061098c81610dfa565b92915050565b6000602082840312156109a457600080fd5b60006109b284828501610968565b91505092915050565b600080604083850312156109ce57600080fd5b60006109dc85828601610968565b92505060206109ed8582860161097d565b9150509250929050565b610a0081610c51565b82525050565b6000610a1182610b99565b610a1b8185610ba4565b9350610a2b818560208601610c94565b610a3481610d57565b840191505092915050565b6000610a4c601a83610ba4565b9150610a5782610d68565b602082019050919050565b6000610a6f601b83610ba4565b9150610a7a82610d91565b602082019050919050565b6000610a92601883610ba4565b9150610a9d82610dba565b602082019050919050565b610ab181610c7d565b82525050565b610ac081610c87565b82525050565b6000602082019050610adb60008301846109f7565b92915050565b60006020820190508181036000830152610afb8184610a06565b905092915050565b60006020820190508181036000830152610b1c81610a3f565b9050919050565b60006020820190508181036000830152610b3c81610a62565b9050919050565b60006020820190508181036000830152610b5c81610a85565b9050919050565b6000602082019050610b786000830184610aa8565b92915050565b6000602082019050610b936000830184610ab7565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610bc082610c7d565b9150610bcb83610c7d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c0057610bff610cf9565b5b828201905092915050565b6000610c1682610c7d565b9150610c2183610c7d565b925082821015610c3457610c33610cf9565b5b828203905092915050565b6000610c4a82610c5d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610cb2578082015181840152602081019050610c97565b83811115610cc1576000848401525b50505050565b60006002820490506001821680610cdf57607f821691505b60208210811415610cf357610cf2610d28565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f4275726e2066726f6d20746865207a65726f2061646472657373000000000000600082015250565b7f4275726e20616d6f756e7420657863656564732062616c616e63650000000000600082015250565b7f4d696e7420746f20746865207a65726f20616464726573730000000000000000600082015250565b610dec81610c3f565b8114610df757600080fd5b50565b610e0381610c7d565b8114610e0e57600080fd5b5056fea2646970667358221220bea20dcae9e5ea43183ed1f4e924805d34959e049dc6227bd717939f1978252964736f6c63430008020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c806370a082311161006657806370a082311461013557806395d89b4114610165578063983b2d5614610183578063986502751461019f578063aa271e1a146101a95761009e565b806306fdde03146100a357806318160ddd146100c1578063313ce567146100df5780634e6ec247146100fd5780636161eb1814610119575b600080fd5b6100ab6101d9565b6040516100b89190610ae1565b60405180910390f35b6100c961026b565b6040516100d69190610b63565b60405180910390f35b6100e7610275565b6040516100f49190610b7e565b60405180910390f35b610117600480360381019061011291906109bb565b61027e565b005b610133600480360381019061012e91906109bb565b6103e2565b005b61014f600480360381019061014a9190610992565b6105c7565b60405161015c9190610b63565b60405180910390f35b61016d610610565b60405161017a9190610ae1565b60405180910390f35b61019d60048036038101906101989190610992565b6106a2565b005b6101a76106c2565b005b6101c360048036038101906101be9190610992565b6106cd565b6040516101d09190610ac6565b60405180910390f35b6060600480546101e890610cc7565b80601f016020809104026020016040519081016040528092919081815260200182805461021490610cc7565b80156102615780601f1061023657610100808354040283529160200191610261565b820191906000526020600020905b81548152906001019060200180831161024457829003601f168201915b5050505050905090565b6000600354905090565b60006012905090565b610286610782565b61028f816106cd565b61029857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ff90610b43565b60405180910390fd5b816003600082825461031a9190610bb5565b9250508190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103709190610bb5565b925050819055508273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516103d59190610b63565b60405180910390a3505050565b6103ea610782565b6103f3816106cd565b6103fc57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561046c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046390610b03565b60405180910390fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ea90610b23565b60405180910390fd5b82816104ff9190610c0b565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600360008282546105549190610c0b565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516105b99190610b63565b60405180910390a350505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606005805461061f90610cc7565b80601f016020809104026020016040519081016040528092919081815260200182805461064b90610cc7565b80156106985780601f1061066d57610100808354040283529160200191610698565b820191906000526020600020905b81548152906001019060200180831161067b57829003601f168201915b5050505050905090565b336106ac816106cd565b6106b557600080fd5b6106be8261078a565b5050565b6106cb336107e4565b565b60006106e382600061083e90919063ffffffff16565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561072457600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600033905090565b61079e8160006106ea90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6107f88160006108d090919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561087957600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561090a57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008135905061097781610de3565b92915050565b60008135905061098c81610dfa565b92915050565b6000602082840312156109a457600080fd5b60006109b284828501610968565b91505092915050565b600080604083850312156109ce57600080fd5b60006109dc85828601610968565b92505060206109ed8582860161097d565b9150509250929050565b610a0081610c51565b82525050565b6000610a1182610b99565b610a1b8185610ba4565b9350610a2b818560208601610c94565b610a3481610d57565b840191505092915050565b6000610a4c601a83610ba4565b9150610a5782610d68565b602082019050919050565b6000610a6f601b83610ba4565b9150610a7a82610d91565b602082019050919050565b6000610a92601883610ba4565b9150610a9d82610dba565b602082019050919050565b610ab181610c7d565b82525050565b610ac081610c87565b82525050565b6000602082019050610adb60008301846109f7565b92915050565b60006020820190508181036000830152610afb8184610a06565b905092915050565b60006020820190508181036000830152610b1c81610a3f565b9050919050565b60006020820190508181036000830152610b3c81610a62565b9050919050565b60006020820190508181036000830152610b5c81610a85565b9050919050565b6000602082019050610b786000830184610aa8565b92915050565b6000602082019050610b936000830184610ab7565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610bc082610c7d565b9150610bcb83610c7d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c0057610bff610cf9565b5b828201905092915050565b6000610c1682610c7d565b9150610c2183610c7d565b925082821015610c3457610c33610cf9565b5b828203905092915050565b6000610c4a82610c5d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610cb2578082015181840152602081019050610c97565b83811115610cc1576000848401525b50505050565b60006002820490506001821680610cdf57607f821691505b60208210811415610cf357610cf2610d28565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f4275726e2066726f6d20746865207a65726f2061646472657373000000000000600082015250565b7f4275726e20616d6f756e7420657863656564732062616c616e63650000000000600082015250565b7f4d696e7420746f20746865207a65726f20616464726573730000000000000000600082015250565b610dec81610c3f565b8114610df757600080fd5b50565b610e0381610c7d565b8114610e0e57600080fd5b5056fea2646970667358221220bea20dcae9e5ea43183ed1f4e924805d34959e049dc6227bd717939f1978252964736f6c63430008020033",
  "devdoc": {
    "events": {
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "_burn(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, reducing the total supply. Emits a {Transfer} event with `to` set to the zero address. Requirements: - `account` cannot be the zero address. - `account` must have at least `amount` tokens."
      },
      "_mint(address,uint256)": {
        "details": "Creates `amount` tokens and assigns them to `account`, increasing the total supply. Emits a {Transfer} event with `from` set to the zero address. Requirements: - `to` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}. The defaut value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2212,
        "contract": "contracts/REP_Points.sol:RepPoints",
        "label": "minters",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(Role)2679_storage"
      },
      {
        "astId": 2314,
        "contract": "contracts/REP_Points.sol:RepPoints",
        "label": "_balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2320,
        "contract": "contracts/REP_Points.sol:RepPoints",
        "label": "_allowances",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 2322,
        "contract": "contracts/REP_Points.sol:RepPoints",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 2324,
        "contract": "contracts/REP_Points.sol:RepPoints",
        "label": "_name",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 2326,
        "contract": "contracts/REP_Points.sol:RepPoints",
        "label": "_symbol",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Role)2679_storage": {
        "encoding": "inplace",
        "label": "struct Roles.Role",
        "members": [
          {
            "astId": 2678,
            "contract": "contracts/REP_Points.sol:RepPoints",
            "label": "bearer",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}